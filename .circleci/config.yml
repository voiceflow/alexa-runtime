version: 2.1

parameters:
  npm-repo:
    type: string
    default: '@voiceflow/alexa-runtime'
  container-image-url:
    type: string
    default: '168387678261.dkr.ecr.us-east-1.amazonaws.com/alexa'
  k8s-asset:
    type: string
    default: 'deployment/alexa-runtime'
  k8s-namespace:
    type: string
    default: 'voiceflow-v1' # This is usually voiceflow-v1
  ssh-fingerprint:
    type: string
    default: '31:42:5a:4e:ee:42:40:e6:77:fc:d4:1b:9f:4e:ca:46'
  track-component:
    type: string
    default: 'alexa-runtime'

# Reusable YAML chunks
defaults:
  prod_deploy_filters: &prod_deploy_filters
    filters:
      branches:
        only:
          - production

  ignore_master_prod_break_glass_deploy_filters: &ignore_master_prod_break_glass_deploy_filters
      branches:
        ignore:
          - master
          - production
          - /^break-glass.*$/


  ignore_break_glass_deploy_filters: &ignore_break_glass_deploy_filters
    filters:
      branches:
        ignore:
          - /^break-glass.*$/

  trying_staging_filters: &trying_staging_filters
    branches:
      only:
        - staging
        - trying

  slack-fail-post-step: &slack-fail-post-step
    post-steps:
      - vfcommon/notify_slack:
          channel: dev_general
          event: fail
          mentions: '@eng_platform'
          template: basic_fail_1
          branch_pattern: master

orbs:
  vfcommon: voiceflow/common@0.0.322
  sonarcloud: sonarsource/sonarcloud@1.0.2

jobs:

  test:
    executor: vfcommon/node-executor
    steps:
      - checkout
      - vfcommon/install_node_modules:
          avoid_post_install_scripts: false
      - attach_workspace:
            at: ~/voiceflow
      - vfcommon/setup_dynamodb
      - vfcommon/lint_report:
          run_in_background: true
      - vfcommon/lint_dockerfile:
          run_in_background: true
      - vfcommon/dependency_tests:
          run_in_background: true
      - vfcommon/unit_tests:
          run_in_background: true
      - vfcommon/integration_tests:
          wait: true
      - vfcommon/clone_s3_assets:
          from: s3://com.voiceflow.ci.assets/alexa
          to: ~/project/tests/smoke/recordedSessions
      - vfcommon/smoke_tests
      - sonarcloud/scan

# When should each job run and what are their dependencies?
workflows:
  # Merge Queue jobs
  queue-jobs:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - vfcommon/test_e2e_start_service:
          <<: *slack-fail-post-step
          service_name: alexa-runtime
          service_port: '8012'
          e2e_service_dependencies: 'server-data-api-e2e'
          context: dev-test
          filters:
            <<: *trying_staging_filters

# Master (production)
  test-and-release-app:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - vfcommon/install_and_build:
          avoid_post_install_scripts: false
          <<: *slack-fail-post-step
          context: dev-test

      - test:
          <<: *slack-fail-post-step
          context: dev-test
          name: test-master
          requires:
            - vfcommon/install_and_build
          filters:
            branches:
              only: master

      - test:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - vfcommon/install_and_build
          filters:
            <<: *ignore_master_prod_break_glass_deploy_filters

      - vfcommon/update_track:
          <<: *ignore_break_glass_deploy_filters
          context: dev-test
          image_repo: << pipeline.parameters.container-image-url >>
          component: << pipeline.parameters.track-component >>
          requires:
            - test-master
            - vfcommon/install_and_build

      - vfcommon/release:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - vfcommon/install_and_build
            - test-master
          filters:
            branches:
              only: master

      - vfcommon/sync_branches:
          check_commit_message: "[bugfix]"
          ssh_key: << pipeline.parameters.ssh-fingerprint >>
          context: dev-test
          name: sync-branches-bugfix
          checkout: true
          requires:
            - vfcommon/install_and_build
            - test-master
            - test
            - vfcommon/release
          filters:
            branches:
              only: master

      # Update Production branch
      - vfcommon/post_image_push_actions:
          <<: *prod_deploy_filters
          namespace: << pipeline.parameters.k8s-namespace >>
          component: << pipeline.parameters.track-component >>
          tagged: true
          context: dev-test
          requires:
            - vfcommon/update_track

      - vfcommon/build_push_image:
          <<: *prod_deploy_filters
          name: build-push-image-e2e
          context: dev-test
          image_repo: << pipeline.parameters.container-image-url >>
          dockerfile: "Dockerfile.e2e"
          image_tag: "latest-master-e2e"
          requires:
            - vfcommon/update_track


  # Cron Production update
  update-production-branch:
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ "update-production-branch", << pipeline.schedule.name >> ]
    jobs:
      - vfcommon/sync_branches:
          checkout: true
          ssh_key: << pipeline.parameters.ssh-fingerprint >>
          name: sync-branches-scheduled
          context: dev-test
          filters:
            branches:
              only: master
